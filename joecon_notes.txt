Important problems to solve:

1) Get string representation of arbitrary zvals (not just strings), as they will be printed out
	- this is the value we will use to update HTML parser and sanitize
	- solution: function zend_make_printable_zval (defined in zend.c)
		- requires allocating a new zval
		- figure out how to allocate a zval

2) Determine best method for modifying zval before it is echo'd
	- probably want to allocate new **STRING** zval (regardless of original object type) and set its value
	- PHP engine has some unusual memory allocation functions (see https://secure.php.net/manual/en/internals2.memory.management.php)
	- need to ensure we don't overwrite original zval
	- format of znode_op may make this difficult:
		- defined in zend_compile.h
		- holds one of several types of variables (var, compiled var, constant, tmp var)
		- method of getting variable depends on type
		- probably will want to use "constant": this allows us to pass a literal zval
		- remember to set op1_type if we patch as fake constant


